<?xml version="1.0"?>

<!-- 
    (c) Copyright, Real-Time Innovations, 2020.  All rights reserved.
    RTI grants Licensee a license to use, modify, compile, and create derivative
    works of the software solely for use with RTI Connext DDS. Licensee may
    redistribute copies of the software provided that all such copies are
    subject to this license. The software is provided "as is", with no warranty
    of any type, including any warranty for fitness for any purpose. RTI is
    under no obligation to maintain or support the software. RTI shall not be
    liable for any incidental or consequential damages arising out of the use
    or inability to use the software.

    This file is used only when it is in the current working directory or when
    the environment variable NDDS_QOS_PROFILES is defined and points to this
    file.

    The profile in this file inherits from the builtin QoS profile
    BuiltinQosLib::Generic.StrictReliable. That profile, along with all of the
    other built-in QoS profiles can be found in the
    BuiltinProfiles.documentationONLY.xml file located in the
    $NDDSHOME/resource/xml/ directory.
-->
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:noNamespaceSchemaLocation="https://community.rti.com/schema/current/rti_dds_qos_profiles.xsd">
    <!--
        QoS Library containing the QoS profile used in this example.
        A QoS library is a named set of QoS profiles.
    -->
    <qos_library name="ChocolateFactoryLibrary">

        <!-- QoS profile to set the participant name for debugging -->
        <qos_profile name="TemperingApplication"
                     base_name="BuiltinQosLib::Generic.Common">
            <domain_participant_qos>
                <participant_name>
                    <name>TemperingAppParticipant</name>
                </participant_name>
            </domain_participant_qos>
        </qos_profile>

        <!-- QoS profile to set the participant name for debugging -->
        <qos_profile name="IngredientApplication"
                     base_name="BuiltinQosLib::Generic.Common">
            <domain_participant_qos>
                <participant_name>
                    <name>IngredientAppParticipant</name>
                </participant_name>
            </domain_participant_qos>
        </qos_profile>

        <!-- QoS profile to set the participant name for debugging -->
        <qos_profile name="MonitoringControlApplication"
                     base_name="BuiltinQosLib::Generic.Common">
            <domain_participant_qos>
                <participant_name>
                    <name>MonitoringControlParticipant</name>
                </participant_name>
            </domain_participant_qos>
        </qos_profile>

        <!-- 
            QoS profile used to configure streaming communication between
            DataWriters and DataReaders.  Used for temperature data in this
            example.

            base_name:
            Communication is streaming because this profile inherits from
            the built-in profile "BuiltinQosLib::Pattern.Streaming"
        -->
        <qos_profile name="ChocolateTemperatureProfile"
                base_name="BuiltinQosLib::Pattern.Streaming"/>

        <!-- 
            QoS profile used to configure streaming communication between
            DataWriters and DataReaders.  Used for ChocolateLotState data
            in this example.

            base_name:
            Communication follows the state data pattern because this profile
            inherits from the built-in profile "BuiltinQosLib::Pattern.Status"
        -->
        <qos_profile name="ChocolateLotStateProfile"
                     base_name="BuiltinQosLib::Pattern.Status"/>

    </qos_library>
</dds>
